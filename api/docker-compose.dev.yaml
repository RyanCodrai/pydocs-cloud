version: "3.7"
services:
  # User API service
  user-api:
    container_name: pydocs-user-api
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_TARGET: development-deps
    command: tail -f /dev/null
    stop_grace_period: 0s
    volumes:
      - type: bind
        source: .
        target: /srv
        consistency: cached
      - type: bind
        source: ~/.config/gcloud/application_default_credentials.json
        target: /home/appuser/.config/gcloud/application_default_credentials.json
        read_only: true
    env_file:
      - .env
    environment:
      - SERVICE_TYPE=user
    restart: unless-stopped
    ports:
      - 8080:8080
    depends_on:
      - db

  # Releases API service
  releases-api:
    container_name: pydocs-releases-api
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_TARGET: development-deps
    command: tail -f /dev/null
    stop_grace_period: 0s
    volumes:
      - type: bind
        source: .
        target: /srv
        consistency: cached
      - type: bind
        source: ~/.config/gcloud/application_default_credentials.json
        target: /home/appuser/.config/gcloud/application_default_credentials.json
        read_only: true
    env_file:
      - .env
    environment:
      - SERVICE_TYPE=releases
    restart: unless-stopped
    ports:
      - 8081:8081
    depends_on:
      - db

  db:
    image: postgres:13
    container_name: postgres_db
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always

volumes:
  postgres_data: